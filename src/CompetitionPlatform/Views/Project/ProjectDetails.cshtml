@using System.Threading.Tasks
@using CompetitionPlatform.Models.ProjectViewModels
@model ProjectViewModel

@{
    ViewData["Title"] = "Project Details";
}
<div class="container col-md-12">
    <div class="row">
        <a asp-area="" asp-controller="Home" asp-action="Index" class="btn btn-sm btn-info project-details-back">
            <span class="glyphicon glyphicon-menu-left"></span>
            <p class="inline">Back to Projects</p>
        </a>
        <a asp-area="" asp-controller="Project" asp-action="Edit" asp-route-id="@Model.Id" class="navbar-right edit-project-button"><span class="glyphicon glyphicon-pencil"></span> Edit</a>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-9">
            <h2>@Model.Name</h2>

            <div class="project-details-budget inline">
                <span class="h2">$@Model.BudgetFirstPlace</span>
                <div>1st PLACE</div>
            </div>

            @if (Model.BudgetSecondPlace != null)
            {
                <div class="project-details-budget inline">
                    <span class="h2">$@Model.BudgetSecondPlace</span>
                    <div>3x2nd PLACE</div>
                </div>
            }

            <div class="progress">
                @{
                    int completion = 0;
                    string style = "";
                }

                @switch (Model.Status)
                {
                    case Status.Initiative:
                        completion = 20;
                        style = "progress-bar-info";
                        break;
                    case Status.CompetitionRegistration:
                        completion = 40;
                        style = "progress-bar-success";
                        break;
                    case Status.Implementation:
                        completion = 60;
                        style = "progress-bar-danger";
                        break;
                    case Status.Voting:
                        completion = 80;
                        style = "progress-bar-warning";
                        break;
                    case Status.Archive:
                        completion = 100;
                        break;
                }

                <div class="project-status-progress progress-bar @style" role="progressbar" aria-valuenow="@completion" aria-valuemin="0" aria-valuemax="100" style="width: @completion%;">
                    @Model.Status
                </div>
            </div>

            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active"><a href="#Info" aria-controls="Info" role="tab" data-toggle="tab">Info</a></li>
                <li role="presentation"><a href="#Participants" aria-controls="Participants" role="tab" data-toggle="tab">Participants <span class="badge">@Model.ParticipantsPartial.Participants.Count()</span></a></li>
                <li role="presentation"><a href="#Comments" aria-controls="Comments" role="tab" data-toggle="tab">Comments <span class="badge">@Model.CommentsPartial.Comments.Count()</span></a></li>
                <li role="presentation"><a href="#Results" aria-controls="Results" role="tab" data-toggle="tab">Results</a></li>
            </ul>

            <div class="tab-content project-details-tabs">
                <div role="tabpanel" class="tab-pane active" id="Info">
                    <div class="project-details-description">
                        @Model.Description
                    </div>
                    @if (Model.FileInfo != null)
                    {
                        <div class="project-file">
                            <div class="inline">
                                <span class="glyphicon glyphicon-file inline project-file-icon"></span>
                            </div>
                            <div class="inline">
                                <div class="bold-text">@Model.FileInfo.FileName</div>
                                <a asp-area="" asp-controller="ProjectDetails" asp-action="DownloadProjectFile" asp-route-id="@Model.Id">Download</a>
                            </div>
                        </div>
                    }
                </div>
                <div role="tabpanel" class="tab-pane" id="Participants">
                    @if (Model.IsParticipant)
                    {
                        <a asp-area="" asp-controller="ProjectDetails" asp-action="AddResult" asp-route-id="@Model.Id" class="btn btn-primary add-result-button">
                            <span class="glyphicon glyphicon-cloud-upload" aria-hidden="true"></span> Add Result
                        </a>
                    }
                    @await Html.PartialAsync("ParticipantsPartial", Model.ParticipantsPartial)
                </div>
                <div role="tabpanel" class="tab-pane" id="Comments">
                    @await Html.PartialAsync("CommentsPartial", Model.CommentsPartial)
                </div>
                <div role="tabpanel" class="tab-pane" id="Results">
                    @await Html.PartialAsync("ResultsPartial", Model.ResultsPartial)
                </div>
            </div>
        </div>

        <div class="col-md-3 project-details-right-panel">
            @await Html.PartialAsync("ProjectDetailsStatusPartial", new ProjectDetailsStatusViewModel
       {
           ProjectId = Model.Id,
           Status = Model.Status,
           VotesFor = Model.VotesFor,
           VotesAgainst = Model.VotesAgainst,
           CompetitionRegistrationDeadline = Model.CompetitionRegistrationDeadline,
           ImplementationDeadline = Model.ImplementationDeadline,
           VotingDeadline = Model.VotingDeadline
       })
            <div>
                <p>
                    Category: <span class="label label-info">@Model.Category</span>
                </p>
            </div>

            <div>
                <p>
                    <span class="text-muted">Created</span> @Model.Created.ToString("MMMM dd, yyyy")
                </p>
            </div>

            <div>
                <p>
                    <span class="text-muted">Updated</span> @Model.LastModified.ToString("MMMM dd, yyyy")
                </p>
            </div>

            <div class="project-details-tags">
                <h3 class="bold-text">Tags</h3>
                <hr />
                <div>
                    @if (Model.TagsList != null)
                    {
                        foreach (var category in Model.TagsList)
                        {
                            <div class="project-details-tag inline">
                                <span class="label label-default">@category</span>
                            </div>
                        }
                    }
                </div>
            </div>

            <div>
                <h3 class="bold-text">Share</h3>
                <hr />
            </div>

            <div>
                <h3 class="bold-text">Other Projects</h3>
                <hr />
            </div>
        </div>
    </div>
</div>
