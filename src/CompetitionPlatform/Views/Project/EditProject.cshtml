@using System.Threading.Tasks
@using CompetitionPlatform.Models.ProjectViewModels
@model ProjectViewModel

@{
    ViewData["Title"] = "Edit Project";
}

<section class="section section--lead section--padding">
    <div class="container">
        <div class="page__actions">
            <div class="pull-right" style="margin-left: 20px; margin-top: -16px;"><a type="button" class="btn btn-circle new-project-button" href="/Project/Create">+</a></div>
            <div class="back_link">
                <a asp-area="" asp-controller="Home" asp-action="Index">
                    <i class="icon icon--back"></i> Back to Projects
                </a>
            </div>
        </div>
        <div class="content__left">
            <div class="pull-right latest_updated">
                <span class="text-muted">Latest updated</span> @Model.LastModified.ToString("MMMM dd, yyyy")
            </div>
            <h2>Edit project</h2>
        </div>
    </div>
</section>

<section class="section section--steps">
    @{
        var initiativeCircle = "";
        var competitionRegistrationCircle = "";
        var implementationCircle = "";
        var votingCircle = "";
        var archiveCircle = "";
        var votesCount = Model.VotesFor + Model.VotesAgainst;
        var numberOfVotes = votesCount == 1 ? votesCount + " VOTE" : votesCount + " VOTES";

        if (Model.Status == Status.Initiative)
        {
            initiativeCircle = "active";
        }
        if (Model.Status == Status.CompetitionRegistration)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "active";
        }
        if (Model.Status == Status.Implementation)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "success";
            implementationCircle = "active";
        }
        if (Model.Status == Status.Voting)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "success";
            implementationCircle = "success";
            votingCircle = "active";
        }
        if (Model.Status == Status.Archive)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "success";
            implementationCircle = "success";
            votingCircle = "success";
            archiveCircle = "success";
        }

    }
    <div class="container">
        <div class="steps">
            <div class="steps__item steps__item--1 @initiativeCircle">
                <a href="">
                    <div class="steps__index">1</div>
                    <div class="steps__text">Initiative</div>
                </a>
            </div>
            <div class="steps__item steps__item--2 @competitionRegistrationCircle">
                <a href="">
                    <div class="steps__index">2</div>
                    <div class="steps__text">Competition registration</div>
                </a>
            </div>
            <div class="steps__item steps__item--3 @implementationCircle">
                <a href="">
                    <div class="steps__index">3</div>
                    <div class="steps__text">Implementation</div>
                </a>
            </div>
            <div class="steps__item steps__item--3 @votingCircle">
                <a href="">
                    <div class="steps__index">4</div>
                    <div class="steps__text">Voting</div>
                </a>
            </div>
            <div class="steps__item steps__item--4 @archiveCircle">
                <a href="">
                    <div class="steps__index">5</div>
                    <div class="steps__text">Archive</div>
                </a>
            </div>
        </div>

        @if (Model.Status == Status.Initiative)
        {
            <div class="row">
                <div class="col-sm-9">
                    <p>The project must go through several stages before the competition starts. At Initiative must collect a minimum of 40 votes, for a competition. Once this amount will be collected, the project can be transferred to the status of competition registration.</p>
                </div>
                <div class="col-sm-3">
                    <div class="voting_group__value">@numberOfVotes</div>

                    @await Html.PartialAsync("VotingBarsPartial", new ProjectVoteViewModel
               {
                   VotesFor = Model.VotesFor,
                   VotesAgainst = Model.VotesAgainst
               })
                </div>
            </div>
        }
    </div>
</section>

<section class="section section--competition_edit">
    <div class="container">
        <div class="content__left">
            <form asp-action="SaveProject" enctype="multipart/form-data" class="form form--default form--competition_edit">
                <h4 class="form_title">basic info</h4>

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input asp-for="@Model.Id" type="hidden" />
                <input asp-for="@Model.VotesFor" type="hidden" />
                <input asp-for="@Model.VotesAgainst" type="hidden" />

                @if (Model.IsAdmin)
                {
                    <div class="row">
                        <div class="col-sm-6">
                            <label class="control-label">Status</label>
                            <div class="form-group" data-control="select">
                                <select asp-for="@Model.Status" class="form-control">
                                    @foreach (var status in Enum.GetValues(typeof(Status)))
                                    {
                                        <option value=@status>Status: @status</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                }

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger" />
                </div>

                <div class="form-group">
                    <div class="row">
                        <label asp-for="Overview" class="control-label col-sm-4"></label>
                    </div>
                    <textarea asp-for="Overview" class="form-control" rows="10"></textarea>
                    <span asp-validation-for="Overview" class="text-danger" />
                </div>

                <div class="form-group">
                    <div class="row">
                        <label asp-for="Description" class="control-label col-sm-4"></label>

                    </div>
                    <textarea asp-for="Description" class="form-control richEditor" rows="10"></textarea>
                    <span asp-validation-for="Description" class="text-danger" />
                </div>

                <div class="form-group">
                    <label class="control-label">Brief</label>
                    <div class="fileupload">
                        <label class="btn btn--default fileupload__btn">
                            Choose File... <input id="file" type="file" name="File" style="display: none;">
                        </label>
                        <span id="fileInputHelperText" class="fileupload__notice">Maximum file size is 3Mb</span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <label class="control-label">Category:</label>
                        <div class="form-group" data-control="select">
                            <select asp-for="@Model.Category" class="form-control">
                                @foreach (var category in Model.ProjectCategories)
                                {
                                    <option>@category</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="control-label">Tags</label>
                            <input asp-for="Tags" class="form-control" />
                        </div>
                    </div>
                </div>

                <h4 class="form_title">deadlines</h4>
                <p class="text-muted">Decide with deadlines for each stage. The project will take place automatically and change the status of the checkpoints.</p>

                <div class="row">
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label asp-for="CompetitionRegistrationDeadline" class="control-label"></label>
                            <input asp-for="CompetitionRegistrationDeadline" class="form-control datetimepicker" />
                            <span asp-validation-for="CompetitionRegistrationDeadline" class="text-danger" />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label asp-for="ImplementationDeadline" class="control-label"></label>
                            <input asp-for="ImplementationDeadline" class="form-control datetimepicker" />
                            <span asp-validation-for="ImplementationDeadline" class="text-danger" />
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="form-group">
                            <label asp-for="VotingDeadline" class="control-label"></label>
                            <input asp-for="VotingDeadline" class="form-control datetimepicker" />
                            <span asp-validation-for="VotingDeadline" class="text-danger" />
                        </div>
                    </div>
                </div>

                <h4 class="form_title">budget</h4>
                <p class="text-muted">Any of the citizens of Lykke City will be able to finance the project. You can enter the estimated budget of the project. You can give the project the entire fund to one winner, and can spread among several.</p>

                <div class="form-group">
                    <label class="control-label">1<sup>st</sup> prize</label>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-1">
                                    <div class="prize__value">$</div>
                                </div>
                                <div class="col-sm-11">
                                    <input asp-for="BudgetFirstPlace" class="form-control" />
                                </div>
                            </div>
                            <span asp-validation-for="BudgetFirstPlace" class="text-danger" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label">2<sup>nd</sup> prize</label>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-1">
                                    <div class="prize__value">$</div>
                                </div>
                                <div class="col-sm-11">
                                    <input asp-for="BudgetSecondPlace" class="form-control" />
                                </div>
                            </div>
                            <span asp-validation-for="BudgetSecondPlace" class="text-danger" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="">
                        <recaptcha />
                        <span class="text-danger" id="recaptchaErrorMessage"></span>
                    </div>
                </div>

                <div class="form__submit">
                    <div class="row">
                        <div class="col-sm-6">
                            <button type="submit" class="btn">Save changes</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <recaptcha-script validation-message-element-id="recaptchaErrorMessage" />
}
